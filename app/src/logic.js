import {inject} from 'aurelia-framework'
import {Configure} from 'aurelia-configuration'

import Web3 from 'web3'
import Wallet from 'ethereumjs-wallet'

@inject(Configure)
export class Logic {
    constructor(config) {
        this.config = config
        // TODO: test browser compatibility (especially crypto api)

        // TODO: how to get this working?
        // this.contract = config.get('ethereum.contract.address')
        //this.contract.address = "0xefb28f664b5d87c4efe0700d59a1793f2c0f4c0e" // hardcoding in the meantime
        //this.contract = Contracts.bkcvote

        // this is a workaround to get() currently supporting only 2 levels, see https://github.com/Vheissu/aurelia-configuration/issues/68
        var rpcAddr = config.getAll().ethereum.rpc
        var web3 = new Web3(new Web3.providers.HttpProvider(rpcAddr))
        console.log(web3)

        console.log('coinbase: ' + web3.eth.coinbase)
        var Contract = web3.eth.contract(this.contracts.BKCVote.info.abiDefinition)
        this.contractInstance = Contract.at(this.config.getAll().ethereum.contract.address)
        console.log('instance addr: ' + this.contractInstance.address)

        console.log('votersCount(): ' + this.contractInstance.getVotersCount())

    }

    getRandomToken() {
        var array = new Uint32Array(8)
        window.crypto.getRandomValues(array)
        var token = array.join('')
        return token
        // TODO: convert to an alphanumberic string
    }

    createNewAddress() {
        //var wallet = new Wallet()
        var newAddr = Wallet.generate()
        return newAddr.getAddressString()
    }

    // requests some funding for the given address, needed in order to be able to send transactions
    // It may take a while (~20 seconds) for the funds to become available. That delay needs to be handled in UI
    // TODO: persist txhash somewhere, e.g. in appstate?
    refuelTxHash = null
    fundAccount(address) {
        $.ajax( this.config.getAll().refuelBaseUrl + address )
            .done( (data, textStatus, jqXHR) => {
                console.log('refuel done: ' + data)
                this.refuelTxHash = data.txHash
                console.log(this.refuelTxHash)
            })
            .fail( ( jqXHR, textStatus, errorThrown) => {
                console.log('refuel fail: ' + textStatus + ' - ' + errorThrown)
            })
    }


    contracts = {
        "BKCVote": {
            "code": "",
            "info": {
                "source": "\ncontract BKCVote {\n\n   uint public blockStart;\n   uint public blockEnd;\n   bool public ended;\n   address public owner;\n   string public electionName;\n   uint public votesDone;\n   uint public votesToVerify;\n\n   event newVoter(address);\n   event newPostulant(address);\n   event voteAdded(address);\n   event voteVerified(address, address);\n   event verifierSet(address, address);\n   event error(uint);\n\n   struct Voter {\n       address addr;\n       string name;\n       string surename;\n       string born_date;\n       string personal_id;\n       string phisical_address;\n       address verifier;\n       bool verified;\n       bool alreadyVote;\n   }\n\n   struct Postulant {\n       address addr;\n       string name;\n       string surename;\n       string party;\n       uint votesAmount;\n   }\n\n   mapping(address => uint) public votersIndex;\n   Voter[] public voters;\n\n   mapping(address => uint) public postulantsIndex;\n   Postulant[] public postulants;\n\n   mapping(address => address) private votes;\n\n   function BKCVote(string _electionName, uint _blockStart, uint _blockEnd) {\n       ended = false;\n       owner = msg.sender;\n       blockStart = _blockStart;\n       blockEnd = _blockEnd;\n       electionName = _electionName;\n       voters.length ++;\n       postulants.length ++;\n       votesDone = 0;\n       votesToVerify = 0;\n   }\n\n   /*\n\n   ERROR CODES\n\n   Error 0 = Unauthorized Access.\n   Error 1 = Invalid Block Access.\n   Error 2 = Invalid Address.\n   Error 3 = Insufficent Balance.\n   Error 4 = Vote aldready done.\n   Error 5 = Vote already verified.\n   Error 6 = Vote not done.\n   Error 7 = Verifier not set.\n\n   */\n\n   function addVoter(address _addr,  string _name,  string _surename,  string _born_date,  string _personal_id, string _phisical_address) returns (bool){\n       if (owner != msg.sender){\n           error(0);\n           return (false);\n       } else if (block.number > blockStart){\n           error(1);\n           return (false);\n       } else if (votersIndex[_addr] > 0) {\n           error(2);\n           return (false);\n       } else {\n           uint pos = voters.length ++;\n           voters[pos] = Voter(_addr, _name, _surename, _born_date, _personal_id, _phisical_address, 0x0, false, false);\n           votersIndex[_addr] = pos;\n           votes[_addr] = address(0x0);\n           newVoter(_addr);\n           return (true);\n       }\n   }\n\n   function addPostulant(address _addr,  string _party) returns (bool){\n       if (owner != msg.sender){\n           error(0);\n           return (false);\n       } else if (block.number > blockStart){\n           error(1);\n           return (false);\n       } else if ((postulantsIndex[_addr] > 0) || (votersIndex[_addr] == 0)) {\n           error(2);\n           return (false);\n       } else {\n           uint pos = postulants.length++;\n           Voter postulant = voters[votersIndex[_addr]];\n           postulants[pos] = Postulant(_addr, postulant.name, postulant.surename, _party, 0);\n           postulantsIndex[_addr] = pos;\n           newPostulant(_addr);\n           return (true);\n       }\n   }\n\n   function setVerifier(address _addr, address _verifier) returns (bool){\n       if (owner != msg.sender){\n           error(0);\n           return (false);\n       } else if (block.number > blockStart){\n           error(1);\n           return (false);\n       } else if ((votersIndex[_addr] == 0) || (votersIndex[_verifier] == 0)) {\n           error(2);\n           return (false);\n       } else {\n           voters[ votersIndex[_addr] ].verifier = _verifier;\n           verifierSet(_addr, _verifier);\n           return (true);\n       }\n   }\n\n   function vote(address _toVote) returns (bool){\n       if ((block.number < blockStart) || (block.number > blockEnd)){\n           error(1);\n           return (false);\n       } else {\n           uint voterIndex = votersIndex[msg.sender];\n           if (( voterIndex  == 0) || ( postulantsIndex[_toVote] == 0)) {\n               error(2);\n               return (false);\n           } else if (voters[voterIndex].alreadyVote){\n               error(4);\n               return (false);\n           } else if (voters[voterIndex].verifier == address(0x0)){\n               error(7);\n               return (false);\n           }  else {\n               voters[voterIndex].alreadyVote = true;\n               votes[msg.sender] = _toVote;\n               votesDone ++;\n               votesToVerify ++;\n               voteAdded(msg.sender);\n               return (true);\n           }\n       }\n   }\n\n   function verify(address _toVerify) returns (bool){\n       if (block.number < blockStart){\n           error(1);\n           return (false);\n       } else {\n           uint _toVerifyIndex = votersIndex[_toVerify];\n           if (_toVerifyIndex == 0){\n               error(2);\n               return (false);\n           } else if (!voters[_toVerifyIndex].alreadyVote){\n               error(6);\n               return (false);\n           } else if (voters[_toVerifyIndex].verifier != msg.sender){\n               error(0);\n               return (false);\n           } else {\n               postulants[ postulantsIndex[ votes[_toVerify] ] ].votesAmount ++;\n               voters[ _toVerifyIndex ].verified = true;\n               votesToVerify --;\n               voteVerified(_toVerify, msg.sender);\n               return (true);\n           }\n       }\n   }\n\n   function seeVote() constant returns (address, bool){\n       uint voterIndex = votersIndex[msg.sender];\n       if ((voterIndex > 0) && (voters[voterIndex].alreadyVote)){\n           return (votes[msg.sender], voters[voterIndex].verified);\n       } else {\n           return (0x0, false);\n       }\n   }\n\n   function getVotersCount() public constant returns(uint) {\n       return voters.length;\n   }\n\n   function getPostulantsCount() public constant returns(uint) {\n       return postulants.length;\n   }\n\n}\n\n",
                "language": "Solidity",
                "languageVersion": "0.4.4",
                "compilerVersion": "0.4.4",
                "compilerOptions": "--combined-json bin,abi,userdoc,devdoc --add-std --optimize",
                "abiDefinition": [
                    {
                        "constant": false,
                        "inputs": [
                            {
                                "name": "_addr",
                                "type": "address"
                            },
                            {
                                "name": "_verifier",
                                "type": "address"
                            }
                        ],
                        "name": "setVerifier",
                        "outputs": [
                            {
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "payable": false,
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "ended",
                        "outputs": [
                            {
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "payable": false,
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [
                            {
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "votersIndex",
                        "outputs": [
                            {
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "payable": false,
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [
                            {
                                "name": "_toVerify",
                                "type": "address"
                            }
                        ],
                        "name": "verify",
                        "outputs": [
                            {
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "payable": false,
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [
                            {
                                "name": "_toVote",
                                "type": "address"
                            }
                        ],
                        "name": "vote",
                        "outputs": [
                            {
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "payable": false,
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "seeVote",
                        "outputs": [
                            {
                                "name": "",
                                "type": "address"
                            },
                            {
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "payable": false,
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [
                            {
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "name": "postulants",
                        "outputs": [
                            {
                                "name": "addr",
                                "type": "address"
                            },
                            {
                                "name": "name",
                                "type": "string"
                            },
                            {
                                "name": "surename",
                                "type": "string"
                            },
                            {
                                "name": "party",
                                "type": "string"
                            },
                            {
                                "name": "votesAmount",
                                "type": "uint256"
                            }
                        ],
                        "payable": false,
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [
                            {
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "postulantsIndex",
                        "outputs": [
                            {
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "payable": false,
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "blockStart",
                        "outputs": [
                            {
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "payable": false,
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "electionName",
                        "outputs": [
                            {
                                "name": "",
                                "type": "string"
                            }
                        ],
                        "payable": false,
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "getPostulantsCount",
                        "outputs": [
                            {
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "payable": false,
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "payable": false,
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [
                            {
                                "name": "_addr",
                                "type": "address"
                            },
                            {
                                "name": "_name",
                                "type": "string"
                            },
                            {
                                "name": "_surename",
                                "type": "string"
                            },
                            {
                                "name": "_born_date",
                                "type": "string"
                            },
                            {
                                "name": "_personal_id",
                                "type": "string"
                            },
                            {
                                "name": "_phisical_address",
                                "type": "string"
                            }
                        ],
                        "name": "addVoter",
                        "outputs": [
                            {
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "payable": false,
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "votesDone",
                        "outputs": [
                            {
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "payable": false,
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [
                            {
                                "name": "_addr",
                                "type": "address"
                            },
                            {
                                "name": "_party",
                                "type": "string"
                            }
                        ],
                        "name": "addPostulant",
                        "outputs": [
                            {
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "payable": false,
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "blockEnd",
                        "outputs": [
                            {
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "payable": false,
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "votesToVerify",
                        "outputs": [
                            {
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "payable": false,
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "getVotersCount",
                        "outputs": [
                            {
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "payable": false,
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [
                            {
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "name": "voters",
                        "outputs": [
                            {
                                "name": "addr",
                                "type": "address"
                            },
                            {
                                "name": "name",
                                "type": "string"
                            },
                            {
                                "name": "surename",
                                "type": "string"
                            },
                            {
                                "name": "born_date",
                                "type": "string"
                            },
                            {
                                "name": "personal_id",
                                "type": "string"
                            },
                            {
                                "name": "phisical_address",
                                "type": "string"
                            },
                            {
                                "name": "verifier",
                                "type": "address"
                            },
                            {
                                "name": "verified",
                                "type": "bool"
                            },
                            {
                                "name": "alreadyVote",
                                "type": "bool"
                            }
                        ],
                        "payable": false,
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "name": "_electionName",
                                "type": "string"
                            },
                            {
                                "name": "_blockStart",
                                "type": "uint256"
                            },
                            {
                                "name": "_blockEnd",
                                "type": "uint256"
                            }
                        ],
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "newVoter",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "newPostulant",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "voteAdded",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "name": "",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "voteVerified",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "name": "",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "verifierSet",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "name": "error",
                        "type": "event"
                    }
                ],
                "userDoc": {
                    "methods": {}
                },
                "developerDoc": {
                    "methods": {}
                }
            }
        }
    }

}
